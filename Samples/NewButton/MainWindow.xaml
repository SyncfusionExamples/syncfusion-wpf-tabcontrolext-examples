<Window x:Class="NewButton.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        xmlns:local="clr-namespace:NewButton"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d" WindowStartupLocation="CenterScreen"
        Title="Data Binding" Height="450" Width="900">

    <Window.DataContext>
        <local:ViewModel />
    </Window.DataContext>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width=".75*"/>
        </Grid.ColumnDefinitions>

        <Border Grid.Column="0">
            <Grid>
                <syncfusion:TabControlExt  ItemsSource="{Binding TabItems}"
                                           NewButtonBackground="{Binding NewButtonBackground}"
                                           IsNewButtonClosedonNoChild="{Binding IsNewButtonClosedonNoChild}"
                                           IsNewButtonEnabled="{Binding IsNewButtonEnabled}"
                                           NewButtonAlignment="{Binding NewButtonAlignment}"
                                           Margin="20"
                                           Name="tabControlExt">
                    
                    <!--Custom UI for the NewButton -->
                    <syncfusion:TabControlExt.NewButtonTemplate>
                        <ControlTemplate>
                            <Button Background="{Binding NewButtonBackground}" 
                                    Content=" + ">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <i:InvokeCommandAction Command="{Binding NewButtonClickCommand}"
                                                               CommandParameter="{Binding ElementName=tabControlExt}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                        </ControlTemplate>
                    </syncfusion:TabControlExt.NewButtonTemplate>

                    <!--Binding the header text for the Tab item-->
                    <syncfusion:TabControlExt.ItemContainerStyle>
                        <Style TargetType="syncfusion:TabItemExt">
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Header}" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Content}"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center" />
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </syncfusion:TabControlExt.ItemContainerStyle>

                    <!--Custom UI for edit header template-->
                    <syncfusion:TabControlExt.EditHeaderTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Header, Mode=TwoWay}" />
                        </DataTemplate>
                    </syncfusion:TabControlExt.EditHeaderTemplate>
                </syncfusion:TabControlExt>
            </Grid>
        </Border>

        <GroupBox Margin="0,0,3,3" 
                  Grid.Column="1" 
                  Header="User Options">
            <Grid HorizontalAlignment="Stretch" 
                  VerticalAlignment="Stretch"
                  Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*" ></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <TextBlock Margin="3"
                           Text ="Enable NewButton" 
                           Grid.Row="0"
                           Grid.Column="0"/>
                <CheckBox IsChecked="{Binding IsNewButtonEnabled, Mode=TwoWay}" 
                          Grid.Row="0" 
                          Grid.Column="1" 
                          Margin="3"/>


                <TextBlock Margin="3"
                           Text ="NewButton Alignment" 
                           Grid.Row="1"
                           Grid.Column="0"/>
                <ComboBox SelectedItem="{Binding NewButtonAlignment, Mode=TwoWay}" 
                          Grid.Row="1" 
                          Grid.Column="1" 
                          Margin="3">
                    <syncfusion:NewButtonAlignment>First</syncfusion:NewButtonAlignment>
                    <syncfusion:NewButtonAlignment>Last</syncfusion:NewButtonAlignment>
                </ComboBox>

                <TextBlock Margin="3"
                           Text ="Hide NewButton when NoChild" 
                           Grid.Row="2"
                           Grid.Column="0"/>
                <CheckBox IsChecked="{Binding IsNewButtonClosedonNoChild, Mode=TwoWay}" 
                          Grid.Row="2" 
                          Grid.Column="1" 
                          Margin="3"/>
                
                <TextBlock Margin="3"
                           Text ="NewButton Background" 
                           Grid.Row="3"
                           Grid.Column="0"/>
                <syncfusion:ColorPicker Brush="{Binding NewButtonBackground, Mode=TwoWay}" 
                          Grid.Row="3" 
                          Grid.Column="1" 
                          Margin="3"/>
            </Grid>
        </GroupBox>
    </Grid>
</Window>
    